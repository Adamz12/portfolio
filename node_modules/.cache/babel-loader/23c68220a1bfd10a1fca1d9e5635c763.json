{"ast":null,"code":"var _jsxFileName = \"/Users/adamzain/Documents/Job Applications/Resume/BOOTCAMP-PORTFOLIO/src/components/AnimateHeader.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AnimatedHeader = ({\n  headerText,\n  className\n}) => {\n  let animationDelay = 200;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    className: className,\n    children: headerText.split(\"\").map((letter, i) => {\n      if (letter == \" \") {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 18\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"rubberBand\",\n        \"data-aos\": \"flip-left\",\n        \"data-aos-delay\": `${animationDelay = animationDelay + 100}`,\n        children: letter\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n_c = AnimatedHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimatedHeader\");","map":{"version":3,"sources":["/Users/adamzain/Documents/Job Applications/Resume/BOOTCAMP-PORTFOLIO/src/components/AnimateHeader.js"],"names":["AnimatedHeader","headerText","className","animationDelay","split","map","letter","i"],"mappings":";;AAAA,OAAO,MAAMA,cAAc,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AAC3D,MAAIC,cAAc,GAAG,GAArB;AACA,sBACE;AAAI,IAAA,SAAS,EAAED,SAAf;AAAA,cACGD,UAAU,CAACG,KAAX,CAAiB,EAAjB,EAAqBC,GAArB,CAAyB,CAACC,MAAD,EAASC,CAAT,KAAe;AACvC,UAAID,MAAM,IAAI,GAAd,EAAmB;AACjB,4BAAO;AAAA,oBAAM;AAAN;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,0BACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAqC,oBAAS,WAA9C;AAA0D,0BAAiB,GAAGH,cAAc,GAAGA,cAAc,GAAG,GAAK,EAArH;AAAA,kBACGG;AADH,SAAkCC,CAAlC;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBM;KAAMP,c","sourcesContent":["export const AnimatedHeader = ({ headerText, className }) => {\n  let animationDelay = 200;\n  return (\n    <h1 className={className}>\n      {headerText.split(\"\").map((letter, i) => {\n        if (letter == \" \") {\n          return <span>&nbsp;</span>\n        }\n        return (\n          <span className=\"rubberBand\" key={i} data-aos=\"flip-left\" data-aos-delay={`${(animationDelay = animationDelay + 100)}`}>\n            {letter}\n          </span>\n        );\n      })}\n    </h1>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}